//
// GENERATED FILE
//

use super::*;
use f2rust_std::*;

const MAXDEG: i32 = 23;
const ITRUE: i32 = 1;
const IFALSE: i32 = -1;
const C06TP0: i32 = 0;
const C06TP1: i32 = (C06TP0 + 1);
const C06TP2: i32 = (C06TP1 + 1);
const C06TP3: i32 = (C06TP2 + 1);
const C06NST: i32 = 4;
const C06PS0: i32 = 8;
const C06PS1: i32 = 4;
const C06PS2: i32 = 14;
const C06PS3: i32 = 7;
const C06MXZ: i32 = C06PS2;
const C06MNZ: i32 = C06PS1;
const MAXRSZ: i32 = (4 + ((MAXDEG + 1) * (C06PS3 + 1)));

//*****************************************************************
//
//     T_GENTAG (Generate time tags for T_GENCSM)
//
//*****************************************************************

//
// Generate just the time tag sequence generated by T_GENCSM
// for a given set of inputs.
//
//    Version 1.0.0 07-FEB-2014 (NJB)
//
pub fn T_GENTAG(BEGREC: i32, N: i32, EPOCHS: &mut [f64], ctx: &mut Context) {
    let mut EPOCHS = DummyArrayMut::new(EPOCHS, 1..);
    let mut J: i32 = 0;

    //
    // SPICELIB functions
    //

    //
    // Local parameters
    //

    //
    // Local variables
    //

    if spicelib::RETURN(ctx) {
        return;
    }

    //
    // We'll construct a sequence of C-matrices and angular velocities
    // for the orientation of the earth relative to the IREF frame.
    // Those rotations and corresponding angular velocities will be
    // transformed to the requested output frame.
    //
    for I in 1..=N {
        J = ((BEGREC - 1) + I);

        EPOCHS[I] = (J as f64);
    }
}
