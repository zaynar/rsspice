//
// GENERATED FILE
//

use super::*;
use f2rust_std::*;

pub fn TSPICE(ctx: &mut Context) -> f2rust_std::Result<()> {
    let mut CMLINE = [b' '; 1024 as usize];
    let mut OK: bool = false;

    //
    // Set up for testing.  Establish the name of the log file and
    // the version number of the test program.
    //
    support::GETCML(&mut CMLINE, ctx);
    testutil::TSETUP(&mut CMLINE, b"spice{0-9}{0-9}.log", b"1.0.0", ctx)?;
    F_AAAAPHSH(&mut OK, ctx)?;
    F_AB(&mut OK, ctx)?;
    F_ASNACSN(&mut OK, ctx)?;
    F_AZL(&mut OK, ctx)?;
    F_AZLCPV(&mut OK, ctx)?;
    F_BADKPV(&mut OK, ctx)?;
    F_BODCOD(&mut OK, ctx)?;
    F_BODVAR(&mut OK, ctx)?;
    F_CCIFRM(&mut OK, ctx)?;
    F_CHBIGR(&mut OK, ctx)?;
    F_CHBSHV(&mut OK, ctx)?;
    F_CHGIRF(&mut OK, ctx)?;
    F_CHGRFX(&mut OK, ctx)?;
    F_CK02(&mut OK, ctx)?;
    F_CK03(&mut OK, ctx)?;
    F_CK05(&mut OK, ctx)?;
    F_CK06(&mut OK, ctx)?;
    F_CKBSR(&mut OK, ctx)?;
    F_CKCOV(&mut OK, ctx)?;
    F_CKFROT(&mut OK, ctx)?;
    F_CKFXFM(&mut OK, ctx)?;
    F_CKGP(&mut OK, ctx)?;
    F_CKMETA(&mut OK, ctx)?;
    F_CKW01(&mut OK, ctx)?;
    F_CKW02(&mut OK, ctx)?;
    F_CKW03(&mut OK, ctx)?;
    F_CONVRT(&mut OK, ctx)?;
    F_CRDCNV(&mut OK, ctx)?;
    F_CYIP(&mut OK, ctx)?;
    F_DAFAH(&mut OK, ctx)?;
    F_DAFANA(&mut OK, ctx)?;
    F_DAFNN(&mut OK, ctx)?;
    F_DAS(&mut OK, ctx)?;
    F_DASA2L(&mut OK, ctx)?;
    F_DASCUD(&mut OK, ctx)?;
    F_DASFR(&mut OK, ctx)?;
    F_DASMUL(&mut OK, ctx)?;
    F_DDHCLS(&mut OK, ctx)?;
    F_DDHCLU(&mut OK, ctx)?;
    F_DDHF2H(&mut OK, ctx)?;
    F_DDHFNH(&mut OK, ctx)?;
    F_DDHFTSIZE(&mut OK, ctx)?;
    F_DDHGSD(&mut OK, ctx)?;
    F_DDHGTU(&mut OK, ctx)?;
    F_DDHHLU(&mut OK, ctx)?;
    F_DDHISN(&mut OK, ctx)?;
    F_DDHIVF(&mut OK, ctx)?;
    F_DDHLUH(&mut OK, ctx)?;
    F_DDHNFO(&mut OK, ctx)?;
    F_DDHOPN(&mut OK, ctx)?;
    F_DDHPPF(&mut OK, ctx)?;
    F_DDHRCM(&mut OK, ctx)?;
    F_DDHRMU(&mut OK, ctx)?;
    F_DDHUNL(&mut OK, ctx)?;
    F_DHFA(&mut OK, ctx)?;
    F_DLA(&mut OK, ctx)?;
    F_DNEARP(&mut OK, ctx)?;
    F_DPFMT(&mut OK, ctx)?;
    F_DPSTRF(&mut OK, ctx)?;
    F_DSK02(&mut OK, ctx)?;
    F_DSKKPR(&mut OK, ctx)?;
    F_DSKMI2(&mut OK, ctx)?;
    F_DSKOBJ(&mut OK, ctx)?;
    F_DSKRB2(&mut OK, ctx)?;
    F_DSKTOL(&mut OK, ctx)?;
    F_DSKW02(&mut OK, ctx)?;
    F_DSKX02(&mut OK, ctx)?;
    F_DSKXSI(&mut OK, ctx)?;
    F_DSKXV(&mut OK, ctx)?;
    F_DVOPS(&mut OK, ctx)?;
    F_DVSEP(&mut OK, ctx)?;
    F_DWPOOL(&mut OK, ctx)?;
    F_DYN01(&mut OK, ctx)?;
    F_DYN02(&mut OK, ctx)?;
    F_DYN03(&mut OK, ctx)?;
    F_DYN04(&mut OK, ctx)?;
    F_DYN05(&mut OK, ctx)?;
    F_DYN06(&mut OK, ctx)?;
    F_DYN07(&mut OK, ctx)?;
    F_DYN08(&mut OK, ctx)?;
    F_EDNMPT(&mut OK, ctx)?;
    F_EDPNT(&mut OK, ctx)?;
    F_EK01(&mut OK, ctx)?;
    F_EK02(&mut OK, ctx)?;
    F_EK03(&mut OK, ctx)?;
    F_EK04(&mut OK, ctx)?;
    F_EQNCPV(&mut OK, ctx)?;
    F_ET2LST(&mut OK, ctx)?;
    F_ET2UTC(&mut OK, ctx)?;
    F_ETCAL(&mut OK, ctx)?;
    F_EULER(&mut OK, ctx)?;
    F_FNDCMP(&mut OK, ctx)?;
    F_FOVRAY(&mut OK, ctx)?;
    F_FOVTRG(&mut OK, ctx)?;
    F_FRAMEX(&mut OK, ctx)?;
    F_FRFTCH(&mut OK, ctx)?;
    F_FRMCHG(&mut OK, ctx)?;
    F_FRMGET(&mut OK, ctx)?;
    F_GE01(&mut OK, ctx)?;
    F_GETFOV(&mut OK, ctx)?;
    F_GETFV2(&mut OK, ctx)?;
    F_GFBAIL(&mut OK, ctx)?;
    F_GFBIRP(&mut OK, ctx)?;
    F_GFDIRP(&mut OK, ctx)?;
    F_GFDIST(&mut OK, ctx)?;
    F_GFEVNT(&mut OK, ctx)?;
    F_GFFOVE(&mut OK, ctx)?;
    F_GFILUM(&mut OK, ctx)?;
    F_GFLORP(&mut OK, ctx)?;
    F_GFOCCE(&mut OK, ctx)?;
    F_GFOCLT(&mut OK, ctx)?;
    F_GFPA(&mut OK, ctx)?;
    F_GFPCRP(&mut OK, ctx)?;
    F_GFPOSC(&mut OK, ctx)?;
    F_GFREFN(&mut OK, ctx)?;
    F_GFRFOV(&mut OK, ctx)?;
    F_GFRPRT(&mut OK, ctx)?;
    F_GFRR(&mut OK, ctx)?;
    F_GFSCRP(&mut OK, ctx)?;
    F_GFSEP(&mut OK, ctx)?;
    F_GFSNTC(&mut OK, ctx)?;
    F_GFSPRP(&mut OK, ctx)?;
    F_GFSTEP(&mut OK, ctx)?;
    F_GFSUBC(&mut OK, ctx)?;
    F_GFTFOV(&mut OK, ctx)?;
    F_GFUDB(&mut OK, ctx)?;
    F_GFUDS(&mut OK, ctx)?;
    F_GFXCRP(&mut OK, ctx)?;
    F_HRMITE(&mut OK, ctx)?;
    F_ILLUMF(&mut OK, ctx)?;
    F_ILLUMG(&mut OK, ctx)?;
    F_ILUMIN(&mut OK, ctx)?;
    F_INCNSG(&mut OK, ctx)?;
    F_INELPL(&mut OK, ctx)?;
    F_INRYPL(&mut OK, ctx)?;
    F_INSANG(&mut OK, ctx)?;
    F_INSERT(&mut OK, ctx)?;
    F_IOVCMP(&mut OK, ctx)?;
    F_JUL2GR(&mut OK, ctx)?;
    F_KEEPER(&mut OK, ctx)?;
    F_KPBUG(&mut OK, ctx)?;
    F_KPSOLV(&mut OK, ctx)?;
    F_LAGRNG(&mut OK, ctx)?;
    F_LATSRF(&mut OK, ctx)?;
    F_LIMBPT(&mut OK, ctx)?;
    F_LOCATI(&mut OK, ctx)?;
    F_LPARSE(&mut OK, ctx)?;
    F_LS(&mut OK, ctx)?;
    F_LTIME(&mut OK, ctx)?;
    F_M2Q(&mut OK, ctx)?;
    F_MATRIX3(&mut OK, ctx)?;
    F_MATRIXG(&mut OK, ctx)?;
    F_MOVED(&mut OK, ctx)?;
    F_NEARPT(&mut OK, ctx)?;
    F_NNEK01(&mut OK, ctx)?;
    F_NNEK03(&mut OK, ctx)?;
    F_NNEK04(&mut OK, ctx)?;
    F_NPEDLN(&mut OK, ctx)?;
    F_NPELPT(&mut OK, ctx)?;
    F_NPLNPT(&mut OK, ctx)?;
    F_NPSGPT(&mut OK, ctx)?;
    F_OCCULT(&mut OK, ctx)?;
    F_OSCELT(&mut OK, ctx)?;
    F_OSCLTX(&mut OK, ctx)?;
    F_PCK20(&mut OK, ctx)?;
    F_PCKBSR(&mut OK, ctx)?;
    F_PCKBUF(&mut OK, ctx)?;
    F_PCKCOV(&mut OK, ctx)?;
    F_PGR(&mut OK, ctx)?;
    F_PHASEQ(&mut OK, ctx)?;
    F_PLN(&mut OK, ctx)?;
    F_PLT(&mut OK, ctx)?;
    F_PLTNP(&mut OK, ctx)?;
    F_POLYDS(&mut OK, ctx)?;
    F_POOL(&mut OK, ctx)?;
    F_PRDFRM(&mut OK, ctx)?;
    F_PRJP(&mut OK, ctx)?;
    F_PXFORM(&mut OK, ctx)?;
    F_PXFRM2(&mut OK, ctx)?;
    F_Q2M(&mut OK, ctx)?;
    F_QDERIV(&mut OK, ctx)?;
    F_QUAT(&mut OK, ctx)?;
    F_RC2GRD(&mut OK, ctx)?;
    F_RDPCK(&mut OK, ctx)?;
    F_RDPCKD(&mut OK, ctx)?;
    F_REFCHG(&mut OK, ctx)?;
    F_REGLON(&mut OK, ctx)?;
    F_REPMX(&mut OK, ctx)?;
    F_ROTGET(&mut OK, ctx)?;
    F_SAELGV(&mut OK, ctx)?;
    F_SBF(&mut OK, ctx)?;
    F_SCLK(&mut OK, ctx)?;
    F_SCLK0(&mut OK, ctx)?;
    F_SCLK1(&mut OK, ctx)?;
    F_SCTRAN(&mut OK, ctx)?;
    F_SEPOOL(&mut OK, ctx)?;
    F_SGMETA(&mut OK, ctx)?;
    F_SHARPR(&mut OK, ctx)?;
    F_SINCPT(&mut OK, ctx)?;
    F_SLICE(&mut OK, ctx)?;
    F_SPK01(&mut OK, ctx)?;
    F_SPK02(&mut OK, ctx)?;
    F_SPK03(&mut OK, ctx)?;
    F_SPK05(&mut OK, ctx)?;
    F_SPK08(&mut OK, ctx)?;
    F_SPK09(&mut OK, ctx)?;
    F_SPK10(&mut OK, ctx)?;
    F_SPK12(&mut OK, ctx)?;
    F_SPK13(&mut OK, ctx)?;
    F_SPK14(&mut OK, ctx)?;
    F_SPK17(&mut OK, ctx)?;
    F_SPK18(&mut OK, ctx)?;
    F_SPK19(&mut OK, ctx)?;
    F_SPK20(&mut OK, ctx)?;
    F_SPK21(&mut OK, ctx)?;
    F_SPKAPO(&mut OK, ctx)?;
    F_SPKAPP(&mut OK, ctx)?;
    F_SPKBSR(&mut OK, ctx)?;
    F_SPKCOR(&mut OK, ctx)?;
    F_SPKCOV(&mut OK, ctx)?;
    F_SPKCPV(&mut OK, ctx)?;
    F_SPKE15(&mut OK, ctx)?;
    F_SPKEZ(&mut OK, ctx)?;
    F_SPKEZP(&mut OK, ctx)?;
    F_SPKF15(&mut OK, ctx)?;
    F_SPKGEO(&mut OK, ctx)?;
    F_SPKGPS(&mut OK, ctx)?;
    F_SPKGPX(&mut OK, ctx)?;
    F_SPKGXC(&mut OK, ctx)?;
    F_SPKPDS(&mut OK, ctx)?;
    F_SPKPVN(&mut OK, ctx)?;
    F_SPKS19(&mut OK, ctx)?;
    F_SPKSPV(&mut OK, ctx)?;
    F_SPKW01(&mut OK, ctx)?;
    F_SRFNRM(&mut OK, ctx)?;
    F_SRFTRN(&mut OK, ctx)?;
    F_SRFXPT(&mut OK, ctx)?;
    F_ST00(&mut OK, ctx)?;
    F_STLABX(&mut OK, ctx)?;
    F_STMP03(&mut OK, ctx)?;
    F_STPOOL(&mut OK, ctx)?;
    F_STR2ET(&mut OK, ctx)?;
    F_STRING(&mut OK, ctx)?;
    F_SUBPNT(&mut OK, ctx)?;
    F_SUBSLR(&mut OK, ctx)?;
    F_SURFNM(&mut OK, ctx)?;
    F_SURFPV(&mut OK, ctx)?;
    F_SWAPAC(&mut OK, ctx)?;
    F_SWAPAD(&mut OK, ctx)?;
    F_SWAPAI(&mut OK, ctx)?;
    F_SXFORM(&mut OK, ctx)?;
    F_SYMTBC(&mut OK, ctx)?;
    F_SYMTBD(&mut OK, ctx)?;
    F_SYMTBI(&mut OK, ctx)?;
    F_T_URAND(&mut OK, ctx)?;
    F_TABTXT(&mut OK, ctx)?;
    F_TANGPT0(&mut OK, ctx)?;
    F_TANGPT1(&mut OK, ctx)?;
    F_TANGPT2(&mut OK, ctx)?;
    F_TANGPT3(&mut OK, ctx)?;
    F_TANGPTW(&mut OK, ctx)?;
    F_TCHECK(&mut OK, ctx)?;
    F_TERM(&mut OK, ctx)?;
    F_TERMPT(&mut OK, ctx)?;
    F_TEXPYR(&mut OK, ctx)?;
    F_TIMCVR(&mut OK, ctx)?;
    F_TIMDEF(&mut OK, ctx)?;
    F_TIMOUT(&mut OK, ctx)?;
    F_TKFRAM(&mut OK, ctx)?;
    F_TLE(&mut OK, ctx)?;
    F_TNCNSG(&mut OK, ctx)?;
    F_TPARSE(&mut OK, ctx)?;
    F_TPARTV1(&mut OK, ctx)?;
    F_TPARTV2(&mut OK, ctx)?;
    F_TRGSEP(&mut OK, ctx)?;
    F_TSTCK3(&mut OK, ctx)?;
    F_TTRANS(&mut OK, ctx)?;
    F_TWOVXF(&mut OK, ctx)?;
    F_UTC2ET(&mut OK, ctx)?;
    F_VECTOR3(&mut OK, ctx)?;
    F_VECTORG(&mut OK, ctx)?;
    F_VOXEL(&mut OK, ctx)?;
    F_VSTRNG(&mut OK, ctx)?;
    F_WIN(&mut OK, ctx)?;
    F_XDDA(&mut OK, ctx)?;
    F_XFMSTA(&mut OK, ctx)?;
    F_XFNEUL(&mut OK, ctx)?;
    F_XFRAV(&mut OK, ctx)?;
    F_XLATED(&mut OK, ctx)?;
    F_XLATEI(&mut OK, ctx)?;
    F_ZZASC1(&mut OK, ctx)?;
    F_ZZASC2(&mut OK, ctx)?;
    F_ZZASRYEL(&mut OK, ctx)?;
    F_ZZBDIN(&mut OK, ctx)?;
    F_ZZBDKR(&mut OK, ctx)?;
    F_ZZBDTN(&mut OK, ctx)?;
    F_ZZBDTRN(&mut OK, ctx)?;
    F_ZZBODS(&mut OK, ctx)?;
    F_ZZBODS2C(&mut OK, ctx)?;
    F_ZZBODVCD(&mut OK, ctx)?;
    F_ZZBQUAD(&mut OK, ctx)?;
    F_ZZCKE06(&mut OK, ctx)?;
    F_ZZCNQUAD(&mut OK, ctx)?;
    F_ZZCORSXF(&mut OK, ctx)?;
    F_ZZCTR(&mut OK, ctx)?;
    F_ZZCXBRUT(&mut OK, ctx)?;
    F_ZZDASGRC(&mut OK, ctx)?;
    F_ZZDDHNFC(&mut OK, ctx)?;
    F_ZZDGDR(&mut OK, ctx)?;
    F_ZZDGFR(&mut OK, ctx)?;
    F_ZZDGSR(&mut OK, ctx)?;
    F_ZZDM(&mut OK, ctx)?;
    F_ZZDSKBSR(&mut OK, ctx)?;
    F_ZZDSKBUX(&mut OK, ctx)?;
    F_ZZDSKSEL(&mut OK, ctx)?;
    F_ZZDSKSGR(&mut OK, ctx)?;
    F_ZZDSKSGX(&mut OK, ctx)?;
    F_ZZDSKSPH(&mut OK, ctx)?;
    F_ZZEDTMPT(&mut OK, ctx)?;
    F_ZZELLBDS(&mut OK, ctx)?;
    F_ZZELNAXX(&mut OK, ctx)?;
    F_ZZELVUPY0(&mut OK, ctx)?;
    F_ZZFDAT(&mut OK, ctx)?;
    F_ZZFGEO(&mut OK, ctx)?;
    F_ZZFOVAXI(&mut OK, ctx)?;
    F_ZZGETELM(&mut OK, ctx)?;
    F_ZZGFCOQ(&mut OK, ctx)?;
    F_ZZGFCOST(&mut OK, ctx)?;
    F_ZZGFCOU(&mut OK, ctx)?;
    F_ZZGFCPRX(&mut OK, ctx)?;
    F_ZZGFCSLV(&mut OK, ctx)?;
    F_ZZGFDIQ(&mut OK, ctx)?;
    F_ZZGFDIU(&mut OK, ctx)?;
    F_ZZGFFVU(&mut OK, ctx)?;
    F_ZZGFILU(&mut OK, ctx)?;
    F_ZZGFLNG1(&mut OK, ctx)?;
    F_ZZGFLNG2(&mut OK, ctx)?;
    F_ZZGFLNG3(&mut OK, ctx)?;
    F_ZZGFOCU(&mut OK, ctx)?;
    F_ZZGFPAU(&mut OK, ctx)?;
    F_ZZGFREL(&mut OK, ctx)?;
    F_ZZGFRELX(&mut OK, ctx)?;
    F_ZZGFRPWK(&mut OK, ctx)?;
    F_ZZGFRRU(&mut OK, ctx)?;
    F_ZZGFSOLV(&mut OK, ctx)?;
    F_ZZGFSOLVX(&mut OK, ctx)?;
    F_ZZGFSPQ(&mut OK, ctx)?;
    F_ZZGFSPU(&mut OK, ctx)?;
    F_ZZGFSSIN(&mut OK, ctx)?;
    F_ZZGFSSOB(&mut OK, ctx)?;
    F_ZZGFWSTS(&mut OK, ctx)?;
    F_ZZHSC(&mut OK, ctx)?;
    F_ZZHSI(&mut OK, ctx)?;
    F_ZZHULLAX(&mut OK, ctx)?;
    F_ZZILUSTA(&mut OK, ctx)?;
    F_ZZINLAT(&mut OK, ctx)?;
    F_ZZINLAT0(&mut OK, ctx)?;
    F_ZZINPDT(&mut OK, ctx)?;
    F_ZZINPDT0(&mut OK, ctx)?;
    F_ZZINREC(&mut OK, ctx)?;
    F_ZZINVELT(&mut OK, ctx)?;
    F_ZZLATBOX(&mut OK, ctx)?;
    F_ZZMKSPIN(&mut OK, ctx)?;
    F_ZZMSXF(&mut OK, ctx)?;
    F_ZZNAMFRM(&mut OK, ctx)?;
    F_ZZNOFCON(&mut OK, ctx)?;
    F_ZZNRMLON(&mut OK, ctx)?;
    F_ZZOCCED(&mut OK, ctx)?;
    F_ZZOCCED2(&mut OK, ctx)?;
    F_ZZOCCED3(&mut OK, ctx)?;
    F_ZZPDCMPL(&mut OK, ctx)?;
    F_ZZPDPLTC(&mut OK, ctx)?;
    F_ZZPDTBOX(&mut OK, ctx)?;
    F_ZZPLAT(&mut OK, ctx)?;
    F_ZZPTPL02(&mut OK, ctx)?;
    F_ZZRAYBOX(&mut OK, ctx)?;
    F_ZZRECBOX(&mut OK, ctx)?;
    F_ZZRTNMAT(&mut OK, ctx)?;
    F_ZZRXR(&mut OK, ctx)?;
    F_ZZRYTELT(&mut OK, ctx)?;
    F_ZZRYTLAT(&mut OK, ctx)?;
    F_ZZRYTPDT(&mut OK, ctx)?;
    F_ZZRYTREC(&mut OK, ctx)?;
    F_ZZSC01(&mut OK, ctx)?;
    F_ZZSEGBOX(&mut OK, ctx)?;
    F_ZZSEPQ(&mut OK, ctx)?;
    F_ZZSFXCOR(&mut OK, ctx)?;
    F_ZZSGLATX(&mut OK, ctx)?;
    F_ZZSINUTL(&mut OK, ctx)?;
    F_ZZSPKFUN(&mut OK, ctx)?;
    F_ZZSTELAB(&mut OK, ctx)?;
    F_ZZSWFFET(&mut OK, ctx)?;
    F_ZZSWFXFM(&mut OK, ctx)?;
    F_ZZTANSLV(&mut OK, ctx)?;
    F_ZZTANUTL(&mut OK, ctx)?;
    F_ZZTIME(&mut OK, ctx)?;
    F_ZZUTC(&mut OK, ctx)?;
    F_ZZVALCOR(&mut OK, ctx)?;
    F_ZZVRTPLT(&mut OK, ctx)?;
    F_ZZWIND2D(&mut OK, ctx)?;

    //
    // Close up the testing.
    //
    testutil::TCLOSE(ctx)?;

    if OK {
        spicelib::BYEBYE(b"SUCCESS", ctx)?;
    } else {
        spicelib::BYEBYE(b"FAILURE", ctx)?;
    }

    Ok(())
}
